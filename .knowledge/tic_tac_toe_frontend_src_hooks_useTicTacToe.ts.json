{"is_source_file": true, "format": "TypeScript", "description": "This is a React hook module for managing the state of a Tic Tac Toe game, including game logic, state updates, and providing handlers for user interactions.", "external_files": ["react"], "external_methods": ["react.useCallback", "react.useMemo", "react.useState"], "published": ["useTicTacToe", "Player", "Cell", "Board", "GameState"], "classes": [], "methods": [{"name": "export function useTicTacToe() { useTicTacToe", "description": "A React hook that manages Tic Tac Toe game state, including the game board, current player, winner detection, tie conditions, and provides handlers to interact with the game (make moves, reset game).", "scope": "", "scopeKind": ""}], "calls": ["react.useState", "react.useMemo", "react.useCallback"], "search-terms": ["useTicTacToe", "Tic Tac Toe React hook", "game state management", "board state", "winner detection"], "state": 2, "file_id": 17, "knowledge_revision": 34, "git_revision": "", "ctags": [{"_type": "tag", "name": "Board", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-146338-146414/tic_tac_toe_frontend/src/hooks/useTicTacToe.ts", "pattern": "/^export type Board = Cell[];$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "Cell", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-146338-146414/tic_tac_toe_frontend/src/hooks/useTicTacToe.ts", "pattern": "/^export type Cell = Player | null;$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "GameState", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-146338-146414/tic_tac_toe_frontend/src/hooks/useTicTacToe.ts", "pattern": "/^export interface GameState {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "Player", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-146338-146414/tic_tac_toe_frontend/src/hooks/useTicTacToe.ts", "pattern": "/^export type Player = \"X\" | \"O\";$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "WIN_LINES", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-146338-146414/tic_tac_toe_frontend/src/hooks/useTicTacToe.ts", "pattern": "/^const WIN_LINES: number[][] = [$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "board", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-146338-146414/tic_tac_toe_frontend/src/hooks/useTicTacToe.ts", "pattern": "/^  board: Board;$/", "language": "TypeScript", "kind": "property", "scope": "GameState", "scopeKind": "interface"}, {"_type": "tag", "name": "board", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-146338-146414/tic_tac_toe_frontend/src/hooks/useTicTacToe.ts", "pattern": "/^  const [board, setBoard] = useState<Board>(Array(9).fill(null));$/", "language": "TypeScript", "kind": "constant", "scope": "useTicTacToe", "scopeKind": "function"}, {"_type": "tag", "name": "currentPlayer", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-146338-146414/tic_tac_toe_frontend/src/hooks/useTicTacToe.ts", "pattern": "/^    currentPlayer,$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "currentPlayer", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-146338-146414/tic_tac_toe_frontend/src/hooks/useTicTacToe.ts", "pattern": "/^  const [currentPlayer, setCurrentPlayer] = useState<Player>(\"X\");$/", "language": "TypeScript", "kind": "constant", "scope": "useTicTacToe", "scopeKind": "function"}, {"_type": "tag", "name": "currentPlayer", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-146338-146414/tic_tac_toe_frontend/src/hooks/useTicTacToe.ts", "pattern": "/^  currentPlayer: Player;$/", "language": "TypeScript", "kind": "property", "scope": "GameState", "scopeKind": "interface"}, {"_type": "tag", "name": "getWinner", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-146338-146414/tic_tac_toe_frontend/src/hooks/useTicTacToe.ts", "pattern": "/^const getWinner = (board: Board): { winner: Player | null; winningLine: number[] | null } => {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "handleCellClick", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-146338-146414/tic_tac_toe_frontend/src/hooks/useTicTacToe.ts", "pattern": "/^  const handleCellClick = useCallback($/", "language": "TypeScript", "kind": "constant", "scope": "useTicTacToe", "scopeKind": "function"}, {"_type": "tag", "name": "isBoardFull", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-146338-146414/tic_tac_toe_frontend/src/hooks/useTicTacToe.ts", "pattern": "/^  const isBoardFull = useMemo(() => board.every((c) => c !== null), [board]);$/", "language": "TypeScript", "kind": "constant", "scope": "useTicTacToe", "scopeKind": "function"}, {"_type": "tag", "name": "isTie", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-146338-146414/tic_tac_toe_frontend/src/hooks/useTicTacToe.ts", "pattern": "/^    isTie,$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "isTie", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-146338-146414/tic_tac_toe_frontend/src/hooks/useTicTacToe.ts", "pattern": "/^  const isTie = !winner && isBoardFull;$/", "language": "TypeScript", "kind": "constant", "scope": "useTicTacToe", "scopeKind": "function"}, {"_type": "tag", "name": "isTie", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-146338-146414/tic_tac_toe_frontend/src/hooks/useTicTacToe.ts", "pattern": "/^  isTie: boolean;$/", "language": "TypeScript", "kind": "property", "scope": "GameState", "scopeKind": "interface"}, {"_type": "tag", "name": "next", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-146338-146414/tic_tac_toe_frontend/src/hooks/useTicTacToe.ts", "pattern": "/^        const next = [...prev];$/", "language": "TypeScript", "kind": "constant", "scope": "useTicTacToe", "scopeKind": "function"}, {"_type": "tag", "name": "reset", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-146338-146414/tic_tac_toe_frontend/src/hooks/useTicTacToe.ts", "pattern": "/^  const reset = useCallback(() => {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "setBoard", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-146338-146414/tic_tac_toe_frontend/src/hooks/useTicTacToe.ts", "pattern": "/^  const [board, setBoard] = useState<Board>(Array(9).fill(null));$/", "language": "TypeScript", "kind": "constant", "scope": "useTicTacToe", "scopeKind": "function"}, {"_type": "tag", "name": "setCurrentPlayer", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-146338-146414/tic_tac_toe_frontend/src/hooks/useTicTacToe.ts", "pattern": "/^  const [currentPlayer, setCurrentPlayer] = useState<Player>(\"X\");$/", "language": "TypeScript", "kind": "constant", "scope": "useTicTacToe", "scopeKind": "function"}, {"_type": "tag", "name": "state", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-146338-146414/tic_tac_toe_frontend/src/hooks/useTicTacToe.ts", "pattern": "/^  const state: GameState = {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "useTicTacToe", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-146338-146414/tic_tac_toe_frontend/src/hooks/useTicTacToe.ts", "pattern": "/^export function useTicTacToe() {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "winner", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-146338-146414/tic_tac_toe_frontend/src/hooks/useTicTacToe.ts", "pattern": "/^    winner,$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "winner", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-146338-146414/tic_tac_toe_frontend/src/hooks/useTicTacToe.ts", "pattern": "/^  const { winner, winningLine } = useMemo(() => getWinner(board), [board]);$/", "language": "TypeScript", "kind": "constant", "scope": "useTicTacToe", "scopeKind": "function"}, {"_type": "tag", "name": "winner", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-146338-146414/tic_tac_toe_frontend/src/hooks/useTicTacToe.ts", "pattern": "/^  winner: Player | null;$/", "language": "TypeScript", "kind": "property", "scope": "GameState", "scopeKind": "interface"}, {"_type": "tag", "name": "winningLine", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-146338-146414/tic_tac_toe_frontend/src/hooks/useTicTacToe.ts", "pattern": "/^    winningLine,$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "winningLine", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-146338-146414/tic_tac_toe_frontend/src/hooks/useTicTacToe.ts", "pattern": "/^  const { winner, winningLine } = useMemo(() => getWinner(board), [board]);$/", "language": "TypeScript", "kind": "constant", "scope": "useTicTacToe", "scopeKind": "function"}, {"_type": "tag", "name": "winningLine", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-146338-146414/tic_tac_toe_frontend/src/hooks/useTicTacToe.ts", "pattern": "/^  winningLine: number[] | null;$/", "language": "TypeScript", "kind": "property", "scope": "GameState", "scopeKind": "interface"}], "hash": "cd598ec76535ab535ae3de7c3f6b0f87", "format-version": 4, "code-base-name": "tic_tac_toe_frontend", "filename": "tic_tac_toe_frontend/src/hooks/useTicTacToe.ts", "fields": [{"name": "export interface GameState {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "board: Board;", "scope": "GameState", "scopeKind": "interface", "description": "unavailable"}, {"name": "currentPlayer: Player;", "scope": "GameState", "scopeKind": "interface", "description": "unavailable"}, {"name": "isTie: boolean;", "scope": "GameState", "scopeKind": "interface", "description": "unavailable"}, {"name": "winner: Player | null;", "scope": "GameState", "scopeKind": "interface", "description": "unavailable"}, {"name": "winningLine: number[] | null;", "scope": "GameState", "scopeKind": "interface", "description": "unavailable"}], "revision_history": [{"34": ""}]}